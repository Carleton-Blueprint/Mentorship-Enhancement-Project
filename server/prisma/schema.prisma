generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  extensions = [pgcrypto]
}

model Course {
  id            Int             @id @default(autoincrement())
  course_code   String          @unique
  course_name   String
  MentorCourse  MentorCourse[]
  StudentCourse StudentCourse[]
}

model Mentor {
  id                 Int                  @id @default(autoincrement())
  mentor_id          Int                  @unique
  name               String
  email_address      String
  year               String
  Program            String
  Pairings           Int                  @default(0)
  MentorAvailability MentorAvailability[]
  MentorCourse       MentorCourse[]
}

model Availability {
  id                  Int                   @id @default(autoincrement())
  end_time            DateTime
  day                 String
  start_time          DateTime
  MentorAvailability  MentorAvailability[]
  StudentAvailability StudentAvailability[]

  @@unique([day, start_time, end_time], name: "unique_avail")
}

model DateRange {
  id         Int      @id @default(autoincrement())
  start_time DateTime
  end_time   DateTime
}

model Student {
  id                  Int                   @id @default(autoincrement())
  student_id          Int                   @unique
  first_name          String
  last_name           String
  email               String
  major               String
  preferred_name      String
  preferred_pronouns  String
  year_level          Int
  StudentAvailability StudentAvailability[]
  StudentCourse       StudentCourse[]
}

model MentorAvailability {
  availability_id Int
  mentor_id       Int
  availability    Availability @relation(fields: [availability_id], references: [id])
  mentor          Mentor       @relation(fields: [mentor_id], references: [id])

  @@unique([availability_id, mentor_id])
}

model StudentAvailability {
  availability_id Int
  student_id      Int
  availability    Availability @relation(fields: [availability_id], references: [id])
  student         Student      @relation(fields: [student_id], references: [id])

  @@unique([availability_id, student_id])
}

model MentorCourse {
  course_id Int
  mentor_id Int
  course    Course @relation(fields: [course_id], references: [id])
  mentor    Mentor @relation(fields: [mentor_id], references: [id])

  @@unique([course_id, mentor_id])
}

model StudentCourse {
  course_id  Int
  student_id Int
  course     Course  @relation(fields: [course_id], references: [id])
  student    Student @relation(fields: [student_id], references: [id])

  @@unique([course_id, student_id])
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}
